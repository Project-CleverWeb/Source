<?php
/**
 * SETUP PAGE
 * ------------------------------------
 * *instructions* [comeback]
 */


/**
 * Now put the information you gathered here.
 */

// username
$MySQL_Username = "default";

// password
$MySQL_Password = "default";

// database name
$MySQL_Name = "default";

// database host
$MySQL_Host = "default";



/**
 * Advanced Users Only!
 * ----------------------------
 * EDIT AT YOUR OWN RISK!
 */

// Initializing $_CW as an array (removes strict error)
$_CW = array(); // Do not touch

// Localize CW (recommended)
$_CW['settings']['timezone'] = 'default'; // default is 'default' (server timezone)

// Decides the amount (if any) of errors to show.
$_CW['debug_level'] = 1; // default is 1

// Searchs common directory names, this directory, and the directory above this one, if the core is not at this location.
$_CW['path'] = 'default'; // default is 'default'

// Allow the default php to override CW's;
$_CW['settings']['php_error_handler'] = FALSE; // default is FALSE

// Defines the enviroment, if the selected enviroment is invalid, defaults to development.
$_CW['enviroment'] = 'development'; // default is 'production'

/**
 * Security Keys
 * ----------------
 * Automatically generated by default.
 * Set to 'default' to auto generate.
 */
$_CW['secure']['keys']['auth']              = 'default';
$_CW['secure']['keys']['auth_salt']         = 'default';
$_CW['secure']['keys']['secured_auth']      = 'default';
$_CW['secure']['keys']['secured_auth_salt'] = 'default';
$_CW['secure']['keys']['logged_in']         = 'default';
$_CW['secure']['keys']['logged_in_salt']    = 'default';
$_CW['secure']['keys']['nonce']             = 'default';
$_CW['secure']['keys']['nonce_salt']        = 'default';
$_CW['secure']['keys']['captcha_public']    = 'default';
$_CW['secure']['keys']['captcha_private']   = 'default';









/*-------------------------------------------*\
 |                !!!STOP!!!                  |
 |                                            |
 |  Do not edit this file beyond this point!  |
\*-------------------------------------------*/

// ensure the enviroment is done correctly
switch(strtolower($_CW['enviroment'])) {
	case 'production':
		$_CW['enviroment'] = strtolower($_CW['enviroment']);
		break;
	case 'maintenance':
		$_CW['enviroment'] = strtolower($_CW['enviroment']);
		break;
	default:
		$_CW['enviroment'] = 'development';
		break;
}


/**
 * Development Safe Define
 * 
 * @param $name (string) the name of the constant you wish to define 
 * @param $default_value (mixed) The value of the constant you want in both production and maintenance enviroments.
 * @param $development_value (mixed) [optional] The value of the constant want in the development enviroment only.
 * @return (bool) TRUE on success, FALSE otherwise.
 */
function _define($name, $default_value, $development_value=NULL){
	global $_CW;
	$name = (string) $name;
	
	if(defined($name)){
		trigger_error('Previously Defined Constant: ' . $name, E_USER_WARNING);
		return FALSE;
	}else{
		if(($_CW['enviroment'] == 'production') || ($_CW['enviroment'] == 'maintenance') || is_null($development_value)){
			define($name, $default_value);
		}else{
			define($name, $development_value);
		}
	}
	return TRUE;
}

/** Define a Couple Of basic Constants **/
_define('DS',DIRECTORY_SEPARATOR, '/'); // Shorter name for the php constant DIRECTORY_SEPARATOR.
_define('EOL', PHP_EOL); // Shorter name for the php constant PHP_EOL (End of line);
_define('REQUEST_URL', trim($_GET['url'],'/')); // Get the requested URL for parsing later.

_define('REQUEST_METHOD', $_SERVER['REQUEST_METHOD']);
_define('IS_POST', (REQUEST_METHOD === 'POST'));
_define('IS_GET', (REQUEST_METHOD === 'GET'));

// this section is not ready
_define('ROOT', dirname(dirname(__FILE__))); // Folder containing the '/public/' folder
_define('LIB', ROOT . DS . 'library'); // Library Folder
_define('CONF', ROOT . DS . 'configs'); // Configs Folder

// this part may see some cleanup and/or moving
$_CW['db']['conn'] = new mysqli(
	(string) $MySQL_Host,
	(string) $MySQL_Name,
	(string) $MySQL_Username,
	(string) $MySQL_Password
);
unset($MySQL_Host,$MySQL_Name,$MySQL_Password,$MySQL_Username);
/**
 * MySQLi tables list:
 * 	Settings
 * 	Users
 * 	Posts
 * 	Forum Threads
 * 	comments (non forum)
 */
// pass over to mysqli handler

// find CW core, we should only need to do this once, so no functions.
if(empty($_CW['path'])){
	$_CW['path'] = '.'; // allow 'default' as the file name
}
$_CW['path'] = (string) $_CW['path'];
$_CW['temp'] = array(
	$_CW['path'], // search here first
	'cleverweb','CleverWeb','cw','CW','clever','core','cms','CMS'
);

$_CW['tempcount'] = count($_CW['temp']);
$_CW['i'] = 0;
foreach ($_CW['temp'] as $_CW['arrayvalue']) {
	$_CW['i']++;
	
	// no trailing slashes
	$_CW['arrayvalue'] = rtrim($_CW['arrayvalue'],"/");
	$_CW['arrayvalue'] = rtrim($_CW['arrayvalue'],"\\");
	
	// check here
	if(file_exists(__DIR__.DS.$_CW['arrayvalue'].DS.'cwid.php')){
		include_once __DIR__.DS.$_CW['arrayvalue'].DS.'cwid.php';
		if(defined('cw_core_exists') && cw_core_exists===TRUE){
			break;
		}
	}
	elseif($_CW['i']==1){
		if(file_exists(__DIR__.DS.'cwid.php')){
			include_once __DIR__.DS.'cwid.php';
			if(defined('cw_core_exists') && cw_core_exists===TRUE){
				break;
			}
		}
	}
	// check above
	elseif(file_exists(__DIR__.DS.'..'.DS.$_CW['arrayvalue'].DS.'cwid.php')){
		include_once     __DIR__.DS.'..'.DS.$_CW['arrayvalue'].DS.'cwid.php';
		if(defined('cw_core_exists') && cw_core_exists===TRUE){
			break;
		}
	}
	// check way above
	elseif(file_exists(__DIR__.DS.'..'.DS.'..'.DS.$_CW['arrayvalue'].DS.'cwid.php')){
		include_once     __DIR__.DS.'..'.DS.'..'.DS.$_CW['arrayvalue'].DS.'cwid.php';
		if(defined('cw_core_exists') && cw_core_exists===TRUE){
			break;
		}
	}
	// check the heavens
	elseif(file_exists(DS.$_CW['arrayvalue'].DS.'cwid.php')){
		include_once     DS.$_CW['arrayvalue'].DS.'cwid.php';
		if(defined('cw_core_exists') && cw_core_exists===TRUE){
			break;
		}
	}
	
	if($_CW['tempcount']==$_CW['i']){
		// check the last place on earth, the cwip.php should not be here.
		if(file_exists('.'.DS.'cwid.php')){
			include_once '.'.DS.'cwid.php';
			if(defined('cw_core_exists') && cw_core_exists===TRUE){
				// Trigger warning for having it in an unsecure place
				break;
			}
		}
		// We tried our hardest and failed... time to break the bad news.
		exit('CW Error: The core could not be found! Please check $_CW[\'path\'] in your settings.php file');
	}
}
unset($_CW['temp'],$_CW['arrayvalue'],$_CW['i'],$_CW['tempcount']); // little clean up
// END find CW core



// gen securtity keys if they don't exist in the database

